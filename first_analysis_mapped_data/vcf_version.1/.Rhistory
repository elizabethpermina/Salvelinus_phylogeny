eucl.obj<-Rtsne(d, is_distance = TRUE)
hc<-as.hclust.phylo(Alignment_SCNN1D)
knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)){
install.packages("tidyverse")
}
if(!require(SNPRelate)){
source("https://bioconductor.org/biocLite.R")
biocLite("SNPRelate")
}
set.seed(1680) # for reproducibility
if(!require(ISLR)) {
install.packages("ISLR")
}
if(!require(cluster)) {
install.packages("cluster")
}
if(!require(Rtsne)) {
install.packages("Rtsne")
}
library(cluster) # for gower similarity and pam
library(Rtsne) # for t-SNE plot
library(tidyverse)
library(SNPRelate)
library(reshape2)
set.seed(1680) # for reproducibility
if(!require(tidyverse)){
install.packages("tidyverse")
}
if(!require(SNPRelate)){
source("https://bioconductor.org/biocLite.R")
biocLite("SNPRelate")
}
set.seed(1680) # for reproducibility
if(!require(ISLR)) {
install.packages("ISLR")
}
if(!require(cluster)) {
install.packages("cluster")
}
if(!require(Rtsne)) {
install.packages("Rtsne")
}
library(cluster) # for gower similarity and pam
library(Rtsne) # for t-SNE plot
library(tidyverse)
library(SNPRelate)
library(reshape2)
set.seed(1680) # for reproducibility
# read in bash-splitted file
genotype_split<-read.delim("../populations.snps.vcf.split.info.genotype.coverage.txt", header = F, sep = '\t')
genotype_raw<-read.delim("../populations.snps.vcf.Z.headless.sampleNames.trimmed.txt", sep = "\t", header = TRUE)
genotype_names_in_split <- paste(names, ".1.geno", sep="") # genotype names in split
coverage_names_in_split <- paste(names, ".2.cover", sep="") # coverage names in split
pro<- paste(names, ".3.pro", sep="") # coverage names in split
#bind 3 vectors
z <- as.vector(rbind(genotype_names_in_split,coverage_names_in_split,pro))
names(genotype_split)<-z
coverage_cols<-grepl("2.cover", names(genotype_split))
genotype_cols<-grepl("1.geno", names(genotype_split))
coverage<-genotype_split[coverage_cols]
genotype<- read.delim("genotype.01.txt", sep = "\t", header = TRUE)
t.coverage<-t(as.matrix(coverage))
t.genotype<-t(as.matrix(genotype))
# df3 = merge(t.coverage, t.genotype, by.x=row.names(t.coverage), by.y=row.names(t.genotype))
# Applying Ward Hierarchical Clustering
d_coverage   <- dist(t.coverage, method="euclidean")
ward_fit_coverage <- hclust(d_coverage, method="ward")
g4_ward_coverage <- cutree(ward_fit_coverage, k = c(4))
g8_ward_coverage <- cutree(ward_fit_coverage, k = c(8))
#using Gower via daisy
gower_dist_genotype <- daisy(t.genotype,
metric = "gower",
type = list(logratio = 3))
gower_mat_genotype <- as.matrix(gower_dist_genotype)
tsne_obj_genotype <- Rtsne(gower_dist_genotype, is_distance = TRUE)
pam_fit_genotype <- pam(gower_dist_genotype, diss = TRUE, k = 3)
tsne_data_genotype <- tsne_obj_genotype$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_genotype$clustering),
name = row.names(t.genotype))
# Gower clusters for coverage:
gower_dist_coverage <- daisy(t.coverage,
metric = "gower",
type = list(logratio = 3))
gower_mat_coverage <- as.matrix(gower_dist_coverage)
tsne_obj_coverage <- Rtsne(gower_dist_coverage, is_distance = TRUE)
pam_fit_coverage <- pam(gower_dist_coverage, diss = TRUE, k = 3)
tsne_data_coverage <- tsne_obj_coverage$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_coverage$clustering),
name = row.names(t.coverage))
write.table(tsne_data_genotype, file="genotype_clusters.csv", quote = FALSE, sep = ",")
write.table(g8_ward_coverage, file="coverage_groups.csv", quote = FALSE, sep = ",")
#write.table()
plot(ward_fit_coverage)
ggplot(aes(x = X, y = Y), data = tsne_data_genotype) +
geom_point(aes(color = cluster))
tsne_data_genotype
tsne_data_coverage
genotype_names_in_split <- paste(names, ".1.geno", sep="") # genotype names in split
ggplot(aes(x = X, y = Y), data = tsne_data_genotype) +
geom_point(aes(color = cluster))
write.table(tsne_data_genotype, file="genotype_clusters.csv", quote = FALSE, sep = ",")
write.table(g8_ward_coverage, file="coverage_groups.csv", quote = FALSE, sep = ",")
write.table(tsne_data_coverage, file = "coverage_clusters.csv", quote = FALSE, sep = ",")
ggplot(aes(x = X, y = Y), data = tsne_data_genotype) +
geom_point(aes(color = cluster))
ggplot(aes(x = X, y = Y), data = tsne_data_genotype) +
geom_point(aes(color = cluster))
ggplot(aes(x = X, y = Y), data = tsne_data_coverage) +
geom_point(aes(color = cluster))
dim(genotype)
sessionInfo()
write.table(genotype_split, file = "genotype_split_object.csv", quote = FALSE, sep = ",")
genotype_split<-read.csv("genotype_split_object.csv")
genotype_split<-read.delim("../populations.snps.vcf.split.info.genotype.coverage.txt", header = F, sep = '\t')
genotype_raw<-read.delim("../populations.snps.vcf.Z.headless.sampleNames.trimmed.txt", sep = "\t", header = TRUE)
genotype_names_in_split <- paste(names, ".1.geno", sep="") # genotype names in split
coverage_names_in_split <- paste(names, ".2.cover", sep="") # coverage names in split
pro<- paste(names, ".3.pro", sep="") # coverage names in split
#bind 3 vectors
z <- as.vector(rbind(genotype_names_in_split,coverage_names_in_split,pro))
names(genotype_split)<-z
coverage_cols<-grepl("2.cover", names(genotype_split))
genotype_cols<-grepl("1.geno", names(genotype_split))
length(names(genotype_split))
dim(genotype_split)
write.table(genotype_split, file = "genotype_split_object.tab", quote = FALSE, sep = "\t")
x<-read.delim("genotype_split_object.tab")
genotype_split<-read.delim("genotype_split_object.tab")
coverage<-genotype_split[coverage_cols]
genotype<- read.delim("genotype.01.txt", sep = "\t", header = TRUE)
t.coverage<-t(as.matrix(coverage))
t.genotype<-t(as.matrix(genotype))
# df3 = merge(t.coverage, t.genotype, by.x=row.names(t.coverage), by.y=row.names(t.genotype))
# Applying Ward Hierarchical Clustering
d_coverage   <- dist(t.coverage, method="euclidean")
ward_fit_coverage <- hclust(d_coverage, method="ward")
g4_ward_coverage <- cutree(ward_fit_coverage, k = c(4))
g8_ward_coverage <- cutree(ward_fit_coverage, k = c(8))
#using Gower via daisy
gower_dist_genotype <- daisy(t.genotype,
metric = "gower",
type = list(logratio = 3))
gower_mat_genotype <- as.matrix(gower_dist_genotype)
tsne_obj_genotype <- Rtsne(gower_dist_genotype, is_distance = TRUE)
pam_fit_genotype <- pam(gower_dist_genotype, diss = TRUE, k = 3)
tsne_data_genotype <- tsne_obj_genotype$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_genotype$clustering),
name = row.names(t.genotype))
# Gower clusters for coverage:
gower_dist_coverage <- daisy(t.coverage,
metric = "gower",
type = list(logratio = 3))
gower_mat_coverage <- as.matrix(gower_dist_coverage)
tsne_obj_coverage <- Rtsne(gower_dist_coverage, is_distance = TRUE)
pam_fit_coverage <- pam(gower_dist_coverage, diss = TRUE, k = 3)
tsne_data_coverage <- tsne_obj_coverage$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_coverage$clustering),
name = row.names(t.coverage))
genotype_split<-read.delim("genotype_split_object.tab")
coverage_cols<-grepl("2.cover", names(genotype_split))
genotype_cols<-grepl("1.geno", names(genotype_split))
coverage<-genotype_split[coverage_cols]
genotype<- read.delim("genotype.01.txt", sep = "\t", header = TRUE)
t.coverage<-t(as.matrix(coverage))
t.genotype<-t(as.matrix(genotype))
# df3 = merge(t.coverage, t.genotype, by.x=row.names(t.coverage), by.y=row.names(t.genotype))
# Applying Ward Hierarchical Clustering
d_coverage   <- dist(t.coverage, method="euclidean")
ward_fit_coverage <- hclust(d_coverage, method="ward")
g4_ward_coverage <- cutree(ward_fit_coverage, k = c(4))
g8_ward_coverage <- cutree(ward_fit_coverage, k = c(8))
#using Gower via daisy
gower_dist_genotype <- daisy(t.genotype,
metric = "gower",
type = list(logratio = 3))
gower_mat_genotype <- as.matrix(gower_dist_genotype)
tsne_obj_genotype <- Rtsne(gower_dist_genotype, is_distance = TRUE)
pam_fit_genotype <- pam(gower_dist_genotype, diss = TRUE, k = 3)
tsne_data_genotype <- tsne_obj_genotype$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_genotype$clustering),
name = row.names(t.genotype))
# Gower clusters for coverage:
gower_dist_coverage <- daisy(t.coverage,
metric = "gower",
type = list(logratio = 3))
gower_mat_coverage <- as.matrix(gower_dist_coverage)
tsne_obj_coverage <- Rtsne(gower_dist_coverage, is_distance = TRUE)
pam_fit_coverage <- pam(gower_dist_coverage, diss = TRUE, k = 3)
tsne_data_coverage <- tsne_obj_coverage$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_coverage$clustering),
name = row.names(t.coverage))
plot(ward_fit_coverage)
par(cex=0.3, mar=c(5, 8, 4, 1))
plot(ward_fit_coverage, xlab="coverage", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="xlab", ylab="ylab", main="main")
axis(2)
par(cex=0.3, mar=c(5, 8, 4, 1))
plot(ward_fit_coverage, xlab="coverage", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="Ward's D", main="coverage")
axis(2)
par(cex=0.3, mar=c(5, 8, 4, 1))
plot(ward_fit_coverage, xlab="coverage", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="Ward's D", main="coverage")
axis(2)
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(ward_fit_coverage, xlab="coverage", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="Ward's D", main="coverage")
axis(2)
fit_genotype<-hclust(gower_dist_genotype, method = "median")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype, xlab="genotype", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="median", main="genotype")
axis(2)
fit_genotype<-hclust(gower_dist_genotype, method = "median")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype, xlab="genotype", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="median", main="genotype")
axis(2)
fit_genotype<-hclust(gower_dist_genotype, method = "ward")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype, xlab="genotype", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="median", main="genotype")
axis(2)
fit_genotype<-hclust(gower_dist_genotype, method = "ward.D")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype, xlab="genotype", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="median", main="genotype")
axis(2)
fit_genotype<-hclust(gower_dist_genotype, method = "ward.D")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype, xlab="genotype", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="median", main="genotype")
axis(2)
fit_genotype<-hclust(gower_dist_genotype, method = "ward.D")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype, xlab="genotype", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="ward", main="genotype")
axis(2)
genotype_split<-read.delim("genotype_split_object.tab")
coverage_cols<-grepl("2.cover", names(genotype_split))
genotype_cols<-grepl("1.geno", names(genotype_split))
coverage<-genotype_split[coverage_cols]
genotype<- read.delim("genotype.01.txt", sep = "\t", header = TRUE)
t.coverage<-t(as.matrix(coverage))
t.genotype<-t(as.matrix(genotype))
# Applying Ward Hierarchical Clustering
d_coverage   <- dist(t.coverage, method="euclidean")
ward_fit_coverage <- hclust(d_coverage, method="ward")
g4_ward_coverage <- cutree(ward_fit_coverage, k = c(4))
g8_ward_coverage <- cutree(ward_fit_coverage, k = c(8))
gower_dist_genotype <- daisy(t.genotype,
metric = "gower",
type = list(logratio = 3))
gower_mat_genotype <- as.matrix(gower_dist_genotype)
knitr::opts_chunk$set(echo = TRUE)
if(!require(tidyverse)){
install.packages("tidyverse")
}
if(!require(SNPRelate)){
source("https://bioconductor.org/biocLite.R")
biocLite("SNPRelate")
}
if(!require(ISLR)) {
install.packages("ISLR")
}
if(!require(cluster)) {
install.packages("cluster")
}
if(!require(Rtsne)) {
install.packages("Rtsne")
}
library(cluster) # for gower similarity and pam
library(Rtsne) # for t-SNE plot
library(tidyverse)
library(SNPRelate)
library(reshape2)
set.seed(1680) # for reproducibility
genotype_split<-read.delim("genotype_split_object.tab")
coverage_cols<-grepl("2.cover", names(genotype_split))
genotype_cols<-grepl("1.geno", names(genotype_split))
coverage<-genotype_split[coverage_cols]
genotype<- read.delim("genotype.01.txt", sep = "\t", header = TRUE)
t.coverage<-t(as.matrix(coverage))
t.genotype<-t(as.matrix(genotype))
# Applying Ward Hierarchical Clustering
d_coverage   <- dist(t.coverage, method="euclidean")
ward_fit_coverage <- hclust(d_coverage, method="ward")
g4_ward_coverage <- cutree(ward_fit_coverage, k = c(4))
g8_ward_coverage <- cutree(ward_fit_coverage, k = c(8))
#using Gower via daisy
gower_dist_genotype <- daisy(t.genotype,
metric = "gower",
type = list(logratio = 3))
gower_mat_genotype <- as.matrix(gower_dist_genotype)
fit_genotype<-hclust(gower_dist_genotype, method = "median")
tsne_obj_genotype <- Rtsne(gower_dist_genotype, perplexity=15, is_distance = TRUE)
pam_fit_genotype <- pam(gower_dist_genotype, diss = TRUE, k = 3)
tsne_data_genotype <- tsne_obj_genotype$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_genotype$clustering),
name = row.names(t.genotype))
# Gower clusters for coverage:
gower_dist_coverage <- daisy(t.coverage,
metric = "gower",
type = list(logratio = 3))
gower_mat_coverage <- as.matrix(gower_dist_coverage)
tsne_obj_coverage <- Rtsne(gower_dist_coverage, is_distance = TRUE)
pam_fit_coverage <- pam(gower_dist_coverage, diss = TRUE, k = 3)
tsne_data_coverage <- tsne_obj_coverage$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_coverage$clustering),
name = row.names(t.coverage))
tsne_obj_coverage <- Rtsne(gower_dist_coverage, perplexity=15, is_distance = TRUE)
pam_fit_coverage <- pam(gower_dist_coverage, diss = TRUE, k = 3)
tsne_data_coverage <- tsne_obj_coverage$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_coverage$clustering),
name = row.names(t.coverage))
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(ward_fit_coverage, xlab="coverage", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="Ward's D", main="coverage")
axis(2)
ggplot(aes(x = X, y = Y), data = tsne_data_genotype) +
geom_point(aes(color = cluster))
fit_genotype<-hclust(gower_dist_genotype, method = "ward.D")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype, xlab="genotype", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="ward", main="genotype")
axis(2)
tsne_data_genotype
ggplot(aes(x = X, y = Y), data = tsne_data_coverage) +
geom_point(aes(color = cluster))
if(!require(sqldf)) {
install.packages("sqldf")
}
library(sqldf)
acs<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",
destfile = "asc.csv")
acs<-read.csv("asc.csv")
head(asc)
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select unique AGEP from acs")
unique(acs$AGEP)
sqldf("select AGEP where unique from acs")
sqldf("select distinct pwgtp1 from acs")
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
library(XML)
doc.html = htmlTreeParse('http://biostat.jhsph.edu/~jleek/contact.html',
useInternal = TRUE)
head(doc.html)
doc.html
doc.text = unlist(xpathApply(doc.html, '//p', xmlValue))
head(doc.text)
nchar(doc.text[10])
nchar(as.character(doc.text[10]))
doc.text[10]
doc.text
doc.html[10]
doc.html
?read.fwf
read.fwf
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
destfile = "wksst8110.for")
wksst<-read.fwf("wksst8110.for")
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4)
x <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
colSums(x[,4])
(x[,4]
head(x)
colSums(x$V4)
(x$V4)
head(X$V4)
head(x$V4)
as.numeric(head(x$V4))
colSums(as.numeric(x$V4))
sum(as.numeric(x$V4))
q5<-35824.9
q4<-c(43, 99, 8, 6)
q3<-"sqldf("select distinct AGEP from acs")"
q3<-as.character("sqldf("select distinct AGEP from acs")")
q3<-"a"
q3<-as.character("#sqldf("select distinct AGEP from acs")")
q4<-c((43, 99, 8, 6), c(4,5, 0, 2, 2))
head(x)
list.files()
genotype_split<-read.delim("genotype_split_object.tab")
coverage_cols<-grepl("2.cover", names(genotype_split))
genotype_cols<-grepl("1.geno", names(genotype_split))
coverage<-genotype_split[coverage_cols]
genotype<- read.delim("genotype.01.txt", sep = "\t", header = TRUE)
t.coverage<-t(as.matrix(coverage))
t.genotype<-t(as.matrix(genotype))
# df3 = merge(t.coverage, t.genotype, by.x=row.names(t.coverage), by.y=row.names(t.genotype))
# Applying Ward Hierarchical Clustering
d_coverage   <- dist(t.coverage, method="euclidean")
ward_fit_coverage <- hclust(d_coverage, method="ward")
g4_ward_coverage <- cutree(ward_fit_coverage, k = c(4))
g8_ward_coverage <- cutree(ward_fit_coverage, k = c(8))
#using Gower via daisy
gower_dist_genotype <- daisy(t.genotype,
metric = "gower",
type = list(logratio = 3))
gower_mat_genotype <- as.matrix(gower_dist_genotype)
fit_genotype<-hclust(gower_dist_genotype, method = "median")
tsne_obj_genotype <- Rtsne(gower_dist_genotype, perplexity=15, is_distance = TRUE)
pam_fit_genotype <- pam(gower_dist_genotype, diss = TRUE, k = 3)
tsne_data_genotype <- tsne_obj_genotype$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_genotype$clustering),
name = row.names(t.genotype))
# Gower clusters for coverage:
gower_dist_coverage <- daisy(t.coverage,
metric = "gower",
type = list(logratio = 3))
gower_mat_coverage <- as.matrix(gower_dist_coverage)
tsne_obj_coverage <- Rtsne(gower_dist_coverage, perplexity=15, is_distance = TRUE)
pam_fit_coverage <- pam(gower_dist_coverage, diss = TRUE, k = 3)
tsne_data_coverage <- tsne_obj_coverage$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_coverage$clustering),
name = row.names(t.coverage))
head(coverage)
non_zero_coverage <- coverage[,colSums(coverage) > 0]
non_zero_names<-names(non_zero_coverage)
non_zero_names
fileConn<-file("non_zero_names")
writeLines(non_zero_names, fileConn)
close(fileConn)
getwd()
non_zero_names_parsed<-scan(file="non_zero_names.txt")
non_zero_names_parsed<-scan(file="non_zero_names.txt")
non_zero_names_parsed<-scan(file="non_zero_names.txt", what="character")
head(names(genotype))
fileConn<-file("genotype_names")
writeLines(names(genotype), fileConn)
genotype_names_parsed<-scan(file="genotype_names.txt")
close(fileConn)
genotype_names_parsed<-scan(file="genotype_names.txt", what="character")
names(genotype)<-genotype_names_parsed
genotype_non_zero<-genotype[non_zero_names_parsed]
t.genotype_non_zero<-t(as.matrix(genotype_non_zero))
gower_dist_genotype_non_zero<-daisy(t.genotype_non_zero, metric = "gower",
type = list(logratio = 3))
gower_mat_genotype_non_zero<-as.matrix(gower_dist_genotype_non_zero)
fit_genotype_non_zero<-hclust(gower_dist_genotype_non_zero)
tsne_obj_genotype_non_zero <- Rtsne(gower_dist_genotype_non_zero, perplexity=15, is_distance = TRUE)
pam_fit_genotype_non_zero <- pam(gower_dist_genotype_non_zero, diss = TRUE, k = 3)
tsne_data_genotype_non_zero <- tsne_obj_genotype_non_zero$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit_genotype_non_zero$clustering),
name = row.names(t.genotype_non_zero))
ggplot(aes(x = X, y = Y), data = tsne_data_genotype_non_zero) +
geom_point(aes(color = cluster))
fit_genotype<-hclust(gower_dist_genotype_non_zero, method = "ward.D")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype_non_zero, xlab="genotype - non-zero coverage", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="ward", main="genotype - non-zero coverage")
axis(2)
fit_genotype<-hclust(gower_dist_genotype_non_zero, method = "ward.D")
par(cex=0.4, mar=c(5, 8, 4, 1))
plot(fit_genotype_non_zero, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="ward", main="genotype - non-zero coverage")
axis(2)
plot(fit_genotype_non_zero, xlab="", ylab="", main="", sub="", axes=FALSE)
par(cex=1)
title(xlab="samples", ylab="ward", main="genotype - non-zero coverage")
axis(2)
install_from_swirl("Getting and Cleaning Data")
?swirl
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
